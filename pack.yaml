servers:
  - id: "@modelcontextprotocol/server-filesystem"
    runtime: npm
    install: "npx -y @modelcontextprotocol/server-filesystem"
    env: []
    tags: [filesystem]

  - id: "@modelcontextprotocol/server-brave-search"
    runtime: npm
    install: "npx -y @modelcontextprotocol/server-brave-search"
    env:
      - name: BRAVE_API_KEY
        help: "Create a Brave Search API key and paste it"
    tags: [web, search]

  - id: "@modelcontextprotocol/server-github"
    runtime: npm
    install: "npm i -g @modelcontextprotocol/server-github"
    env:
      - name: GITHUB_PERSONAL_ACCESS_TOKEN
        help: "Personal Access Token with repo scope"
    tags: [dev, github]

  - id: "awslabs.amazon-qbusiness-anonymous-mcp-server"
    runtime: pip
    install: "pip install --user --upgrade awslabs.amazon-qbusiness-anonymous-mcp-server"
    command: "awslabs.amazon-qbusiness-anonymous-mcp-server"
    args: []
    env:
      - name: QBUSINESS_APPLICATION_ID
        help: "Amazon Q Business anonymous application ID"
      - name: AWS_PROFILE
        help: "AWS profile configured with Amazon Q Business access"
      - name: AWS_REGION
        help: "Region hosting your Amazon Q Business application"
    tags: [aws, qbusiness, pip]

  - id: "github.com/mark3labs/mcp-filesystem-server"
    runtime: go
    install: "go install github.com/mark3labs/mcp-filesystem-server@latest"
    command: "mcp-filesystem-server"
    args: []
    env: []
    tags: [filesystem, go]

  - id: "ghcr.io/github/github-mcp-server"
    runtime: docker
    install: "docker pull ghcr.io/github/github-mcp-server:latest"
    command: "docker"
    args:
      - run
      - --rm
      - -i
      - -e
      - GITHUB_PERSONAL_ACCESS_TOKEN
      - ghcr.io/github/github-mcp-server:latest
    env:
      - name: GITHUB_PERSONAL_ACCESS_TOKEN
        help: "Token with repo scope for GitHub MCP server"
    tags: [github, docker]

  - id: "firecrawl-mcp"
    runtime: npm
    install: "npm install -g firecrawl-mcp"
    env:
      - name: FIRECRAWL_API_KEY
        help: "Create at https://www.firecrawl.dev/app/api-keys"
    tags: [web, crawl, search]

  - id: "@supabase/mcp-server-supabase"
    runtime: npm
    install: "npm install -g @supabase/mcp-server-supabase"
    command: "npx"
    args:
      - -y
      - "@supabase/mcp-server-supabase@latest"
      - --read-only
    env:
      - name: SUPABASE_ACCESS_TOKEN
        help: "Create a personal access token in Supabase dashboard"
      - name: SUPABASE_PROJECT_REF
        help: "Optional: scope to a single project (e.g. abcd1234)"
    tags: [supabase, database, api]

  - id: "@stripe/mcp"
    runtime: npm
    install: "npm install -g @stripe/mcp"
    command: "npx"
    args:
      - -y
      - "@stripe/mcp"
      - --tools=all
    env:
      - name: STRIPE_SECRET_KEY
        help: "Stripe secret API key (starts with sk_)"
    tags: [stripe, payments, api]
